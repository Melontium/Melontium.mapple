<?php
/**
 * @file
 * Code for the Farm Maple feature.
 */

include_once 'farm_maple.features.inc';

/**
 * Implements hook_farm_record_types().
 */
function farm_maple_farm_record_types() {
  return array(
    'farm_asset' => array(
      'sugar_bush' => array(
        'label' => t('Sugar Bush'),
        'label_plural' => t('Sugar Bushes'),
        'log_settings' => array(
          'name_pattern' => 'Tap [log:field-farm-sugar-bush]',
          'name_edit' => FALSE,
          'done' => FALSE,
        ),
        'view' => 'farm_sugar_bushes',
      ),
    ),
    'log' => array(
      'farm_tap' => array(
        'label' => t('Tap log'),
        'label_plural' => t('Tap logs'),
        'view' => 'farm_log_tap',
        'farm_asset' => 'sugar_bush',
        'weight' => -99,
      ),
    ),
  );
}

/**
 * Implements hook_farm_log_categories().
 */
function farm_maple_farm_log_categories() {

  // Provide an "Maple" log category.
  return array('Maple');
}

/**
 * Implements hook_farm_log_categories_populate().
 */
function farm_maple_farm_log_categories_populate($log) {
  $categories = array();
  if ($log->type == 'farm_tap') {
    $categories[] = 'Maple';
  }
  return $categories;
}

/**
 * Implements hook_feeds_importer_default_alter().
 */
function farm_maple_feeds_importer_default_alter(&$importers) {

  // Add extra field mappings to taps.
  $name = 'log_farm_tap';
  if (!empty($importers[$name])) {
    $mappings = array(
      array(
        'source' => 'Sugar bush',
        'target' => 'field_farm_sugar_bush:label',
        'unique' => FALSE,
        'language' => 'und',
      ),
      array(
        'source' => 'Tap count',
        'target' => 'field_farm_tap_count',
        'unique' => FALSE,
        'language' => 'und',
      ),
      array(
        'source' => 'Tap size',
        'target' => 'field_farm_tap_size',
        'unique' => FALSE,
        'language' => 'und',
      ),
    );
    $importer_mappings =& $importers[$name]->config['processor']['config']['mappings'];
    $importer_mappings = array_merge($importer_mappings, $mappings);
  }
}
