<?php

/**
 * @file
 * Farm Maple install file.
 */

/**
 * Implements hook_update_dependencies().
 */
function farm_maple_update_dependencies() {

  // Run farm_log_movement_7000(), then farm_maple_7000(), then farm_log_7000(),
  // then farm_maple_7001(), and finally farm_log_movement_7001().
  $dependencies['farm_maple'][7000] = array('farm_log_movement' => 7000);
  $dependencies['farm_maple'][7001] = array('farm_log_movement' => 7000);
  $dependencies['farm_maple'][7001] = array('farm_log' => 7006);
  $dependencies['farm_log_movement'][7001] = array('farm_maple' => 7001);

  return $dependencies;
}

/**
 * Migrate Sap logs to Harvests.
 */
function farm_maple_update_7000(&$sandbox) {

  // Make a list of fields on sap logs.
  $query = db_select('field_config_instance', 'fci');
  $query->addField('fci', 'field_name');
  $query->condition('fci.entity_type', 'log');
  $query->condition('fci.bundle', 'farm_sap');
  $query->condition('fci.deleted', 0);
  $sap_fields = $query->execute()->fetchAllKeyed(0,0);

  // Change all sap logs to harvest logs directly in the {log} table.
  db_query("UPDATE {log} SET type = 'farm_harvest' WHERE type = 'farm_sap'");

  // Migrate values from field_farm_sugar_bush to field_farm_asset tables.
  db_query("INSERT INTO {field_data_field_farm_asset} (SELECT entity_type, 'farm_harvest' as bundle, deleted, entity_id, revision_id, language, delta, field_farm_sugar_bush_target_id as field_farm_asset_target_id FROM {field_data_field_farm_sugar_bush} WHERE entity_type = 'log' AND bundle = 'farm_sap')");
  db_query("INSERT INTO {field_revision_field_farm_asset} (SELECT entity_type, 'farm_harvest' as bundle, deleted, entity_id, revision_id, language, delta, field_farm_sugar_bush_target_id as field_farm_asset_target_id FROM {field_revision_field_farm_sugar_bush} WHERE entity_type = 'log' AND bundle = 'farm_sap')");
  db_query("DELETE FROM {field_data_field_farm_asset} WHERE entity_type = 'log' AND bundle = 'farm_sap'");
  db_query("DELETE FROM {field_revision_field_farm_asset} WHERE entity_type = 'log' AND bundle = 'farm_sap'");

  // Update the bundles in all field data and revision tables.
  foreach ($sap_fields as $key => $field_name) {
    db_query("UPDATE {field_data_" . $field_name . "} SET bundle = 'farm_harvest' WHERE entity_type = 'log' AND bundle = 'farm_sap'");
    db_query("UPDATE {field_revision_" . $field_name . "} SET bundle = 'farm_harvest' WHERE entity_type = 'log' AND bundle = 'farm_sap'");
  }

  // Mark all sap log field instances for deletion.
  foreach ($sap_fields as $key => $field_name) {
    $field = field_info_instance('log', $field_name, 'farm_sap');
    field_delete_instance($field);
  }

  // Delete the View, if it still exists.
  $view = views_get_view('farm_log_sap');
  if (!empty($view)) {
    views_delete_view($view);
  }

  // Delete the sap log type.
  $log_type = log_type_load('farm_sap');
  if (!empty($log_type)) {
    log_type_delete($log_type);
  }
}

/**
 * Migrate sugar bush geometry field to a movement log.
 */
function farm_maple_update_7001(&$sandbox) {

  // Load all sugar bush assets.
  $result = db_query("SELECT id FROM {farm_asset} WHERE type = 'sugar_bush'");

  // Iterate through the results.
  foreach ($result as $record) {

    // Load the asset.
    $asset = farm_asset_load($record->id);

    // If the asset didn't load, skip it.
    if (empty($asset)) {
      continue;
    }

    // Create a new Area for the sugar bush.
    $vocab = taxonomy_vocabulary_machine_name_load('farm_areas');
    $term = entity_create('taxonomy_term', array(
      'name' => $asset->name,
      'vid' => $vocab->vid,
    ));

    // Assign it to the geometry of the asset. This will only be temporary, so
    // that the geometry is automatically copied to the observation log we are
    // about to create.
    $term->field_farm_geofield = $asset->field_farm_geofield;

    // Save the new area.
    taxonomy_term_save($term);

    // Create an observed movement to that area.
    farm_log_movement_observation($asset, array($term), $asset->created);

    // Clear the geometry from the area and save it again.
    $term->field_farm_geofield = array(LANGUAGE_NONE => array());
    taxonomy_term_save($term);
  }

  // Delete the geometry field from the asset.
  $field = field_info_instance('farm_asset', 'field_farm_geofield', 'sugar_bush');
  field_delete_instance($field);
}
